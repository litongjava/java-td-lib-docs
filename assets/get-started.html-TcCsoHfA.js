import{_ as s,c as a,d as p,o as t}from"./app-B9VJZd9Y.js";const e={};function c(o,n){return t(),a("div",null,n[0]||(n[0]=[p(`<h1 id="java-td-lib" tabindex="-1"><a class="header-anchor" href="#java-td-lib"><span>java-td-lib</span></a></h1><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p><strong>TDLib（Telegram Database Library）</strong> 是由 Telegram 官方开发的一个高性能、跨平台的客户端库，旨在帮助开发者快速构建 Telegram 客户端应用。TDLib 处理了与 Telegram 服务器的所有底层通信，包括网络连接、数据同步、加密等复杂任务，使开发者能够专注于应用的业务逻辑。</p><p><strong>TDLib 的主要特点：</strong></p><ul><li><strong>高性能和稳定性</strong>：采用 C++ 编写，具备卓越的性能和可靠性。</li><li><strong>跨平台支持</strong>：支持多种平台，包括 iOS、Android、Windows、macOS、Linux 等。</li><li><strong>自动处理更新</strong>：自动处理消息同步、连接恢复等，简化开发过程。</li><li><strong>多语言绑定</strong>：提供多种语言的绑定（如 Java、Swift、Kotlin 等），方便在不同语言环境中使用。</li></ul><p><strong>java-td-lib</strong> 是 TDLib 的 Java 绑定实现，开源地址：<a href="https://github.com/litongjava/java-td-lib" target="_blank" rel="noopener noreferrer">https://github.com/litongjava/java-td-lib</a></p><h2 id="添加依赖" tabindex="-1"><a class="header-anchor" href="#添加依赖"><span>添加依赖</span></a></h2><p>在项目的 <code>pom.xml</code> 文件中添加以下依赖：</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.litongjava<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>java-td-lib<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="添加库文件" tabindex="-1"><a class="header-anchor" href="#添加库文件"><span>添加库文件</span></a></h2><p>从 <a href="https://github.com/litongjava/java-td-lib/releases" target="_blank" rel="noopener noreferrer">java-td-lib 的发布页面</a> 下载适用于不同平台的库文件。将下载的库文件添加到 <code>java.library.path</code> 中，以确保 Java 应用能够正确加载本地库。</p><h2 id="编写代码" tabindex="-1"><a class="header-anchor" href="#编写代码"><span>编写代码</span></a></h2><p>以下是一个使用 java-td-lib 的示例代码，展示了如何与 Telegram 进行基本的交互。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>drinkless<span class="token punctuation">.</span>tdlib<span class="token punctuation">.</span>example</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">BufferedReader</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOError</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">InputStreamReader</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">NavigableSet</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">TreeSet</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">ConcurrentHashMap</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">ConcurrentMap</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>atomic<span class="token punctuation">.</span></span><span class="token class-name">AtomicLong</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>locks<span class="token punctuation">.</span></span><span class="token class-name">Condition</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>locks<span class="token punctuation">.</span></span><span class="token class-name">Lock</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>locks<span class="token punctuation">.</span></span><span class="token class-name">ReentrantLock</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>drinkless<span class="token punctuation">.</span>tdlib<span class="token punctuation">.</span></span><span class="token class-name">Client</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>drinkless<span class="token punctuation">.</span>tdlib<span class="token punctuation">.</span></span><span class="token class-name">TdApi</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * Example class for TDLib usage from Java.</span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Example</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Client</span> client <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>AuthorizationState</span> authorizationState <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">volatile</span> <span class="token keyword">boolean</span> haveAuthorization <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">volatile</span> <span class="token keyword">boolean</span> needQuit <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">volatile</span> <span class="token keyword">boolean</span> canQuit <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Client<span class="token punctuation">.</span>ResultHandler</span> defaultHandler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Lock</span> authorizationLock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Condition</span> gotAuthorization <span class="token operator">=</span> authorizationLock<span class="token punctuation">.</span><span class="token function">newCondition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">ConcurrentMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>User</span><span class="token punctuation">&gt;</span></span> users <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>User</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">ConcurrentMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>BasicGroup</span><span class="token punctuation">&gt;</span></span> basicGroups <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>BasicGroup</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">ConcurrentMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>Supergroup</span><span class="token punctuation">&gt;</span></span> supergroups <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>Supergroup</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">ConcurrentMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>SecretChat</span><span class="token punctuation">&gt;</span></span> secretChats <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>SecretChat</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">ConcurrentMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>Chat</span><span class="token punctuation">&gt;</span></span> chats <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>Chat</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">NavigableSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OrderedChat</span><span class="token punctuation">&gt;</span></span> mainChatList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OrderedChat</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> haveFullMainChatList <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">ConcurrentMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>UserFullInfo</span><span class="token punctuation">&gt;</span></span> usersFullInfo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>UserFullInfo</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">ConcurrentMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>BasicGroupFullInfo</span><span class="token punctuation">&gt;</span></span> basicGroupsFullInfo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>BasicGroupFullInfo</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">ConcurrentMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>SupergroupFullInfo</span><span class="token punctuation">&gt;</span></span> supergroupsFullInfo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>SupergroupFullInfo</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> newLine <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;line.separator&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> commandsLine <span class="token operator">=</span> <span class="token string">&quot;Enter command (gcs - GetChats, gc &lt;chatId&gt; - GetChat, me - GetMe, sm &lt;chatId&gt; &lt;message&gt; - SendMessage, lo - LogOut, q - Quit): &quot;</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">volatile</span> <span class="token class-name">String</span> currentPrompt <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>currentPrompt <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>currentPrompt <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>currentPrompt<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">setChatPositions</span><span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>Chat</span> chat<span class="token punctuation">,</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>ChatPosition</span><span class="token punctuation">[</span><span class="token punctuation">]</span> positions<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>mainChatList<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>chat<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>ChatPosition</span> position <span class="token operator">:</span> chat<span class="token punctuation">.</span>positions<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token keyword">if</span> <span class="token punctuation">(</span>position<span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">getConstructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>ChatListMain</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">boolean</span> isRemoved <span class="token operator">=</span> mainChatList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">OrderedChat</span><span class="token punctuation">(</span>chat<span class="token punctuation">.</span>id<span class="token punctuation">,</span> position<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">assert</span> isRemoved<span class="token punctuation">;</span></span>
<span class="line">          <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        chat<span class="token punctuation">.</span>positions <span class="token operator">=</span> positions<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>ChatPosition</span> position <span class="token operator">:</span> chat<span class="token punctuation">.</span>positions<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token keyword">if</span> <span class="token punctuation">(</span>position<span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">getConstructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>ChatListMain</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">boolean</span> isAdded <span class="token operator">=</span> mainChatList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">OrderedChat</span><span class="token punctuation">(</span>chat<span class="token punctuation">.</span>id<span class="token punctuation">,</span> position<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">assert</span> isAdded<span class="token punctuation">;</span></span>
<span class="line">          <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">onAuthorizationStateUpdated</span><span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>AuthorizationState</span> authorizationState<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>authorizationState <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token class-name">Example</span><span class="token punctuation">.</span>authorizationState <span class="token operator">=</span> authorizationState<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token class-name">Example</span><span class="token punctuation">.</span>authorizationState<span class="token punctuation">.</span><span class="token function">getConstructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>AuthorizationStateWaitTdlibParameters</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span></span>
<span class="line">      <span class="token class-name">TdApi<span class="token punctuation">.</span>SetTdlibParameters</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>SetTdlibParameters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      request<span class="token punctuation">.</span>databaseDirectory <span class="token operator">=</span> <span class="token string">&quot;tdlib&quot;</span><span class="token punctuation">;</span></span>
<span class="line">      request<span class="token punctuation">.</span>useMessageDatabase <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">      request<span class="token punctuation">.</span>useSecretChats <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">      request<span class="token punctuation">.</span>apiId <span class="token operator">=</span> <span class="token number">94575</span><span class="token punctuation">;</span></span>
<span class="line">      request<span class="token punctuation">.</span>apiHash <span class="token operator">=</span> <span class="token string">&quot;a3406de8d171bb422bb6ddf3bbd800e2&quot;</span><span class="token punctuation">;</span></span>
<span class="line">      request<span class="token punctuation">.</span>systemLanguageCode <span class="token operator">=</span> <span class="token string">&quot;en&quot;</span><span class="token punctuation">;</span></span>
<span class="line">      request<span class="token punctuation">.</span>deviceModel <span class="token operator">=</span> <span class="token string">&quot;Desktop&quot;</span><span class="token punctuation">;</span></span>
<span class="line">      request<span class="token punctuation">.</span>applicationVersion <span class="token operator">=</span> <span class="token string">&quot;1.0&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">      client<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">AuthorizationRequestHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>AuthorizationStateWaitPhoneNumber</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token class-name">String</span> phoneNumber <span class="token operator">=</span> <span class="token function">promptString</span><span class="token punctuation">(</span><span class="token string">&quot;Please enter phone number: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      client<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>SetAuthenticationPhoneNumber</span><span class="token punctuation">(</span>phoneNumber<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">AuthorizationRequestHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>AuthorizationStateWaitOtherDeviceConfirmation</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token class-name">String</span> link <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>AuthorizationStateWaitOtherDeviceConfirmation</span><span class="token punctuation">)</span> <span class="token class-name">Example</span><span class="token punctuation">.</span>authorizationState<span class="token punctuation">)</span><span class="token punctuation">.</span>link<span class="token punctuation">;</span></span>
<span class="line">      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Please confirm this login link on another device: &quot;</span> <span class="token operator">+</span> link<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>AuthorizationStateWaitEmailAddress</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token class-name">String</span> emailAddress <span class="token operator">=</span> <span class="token function">promptString</span><span class="token punctuation">(</span><span class="token string">&quot;Please enter email address: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      client<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>SetAuthenticationEmailAddress</span><span class="token punctuation">(</span>emailAddress<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">AuthorizationRequestHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>AuthorizationStateWaitEmailCode</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token class-name">String</span> code <span class="token operator">=</span> <span class="token function">promptString</span><span class="token punctuation">(</span><span class="token string">&quot;Please enter email authentication code: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      client<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>CheckAuthenticationEmailCode</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>EmailAddressAuthenticationCode</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">AuthorizationRequestHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>AuthorizationStateWaitCode</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token class-name">String</span> code <span class="token operator">=</span> <span class="token function">promptString</span><span class="token punctuation">(</span><span class="token string">&quot;Please enter authentication code: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      client<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>CheckAuthenticationCode</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">AuthorizationRequestHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>AuthorizationStateWaitRegistration</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token class-name">String</span> firstName <span class="token operator">=</span> <span class="token function">promptString</span><span class="token punctuation">(</span><span class="token string">&quot;Please enter your first name: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token class-name">String</span> lastName <span class="token operator">=</span> <span class="token function">promptString</span><span class="token punctuation">(</span><span class="token string">&quot;Please enter your last name: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      client<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>RegisterUser</span><span class="token punctuation">(</span>firstName<span class="token punctuation">,</span> lastName<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">AuthorizationRequestHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>AuthorizationStateWaitPassword</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token class-name">String</span> password <span class="token operator">=</span> <span class="token function">promptString</span><span class="token punctuation">(</span><span class="token string">&quot;Please enter password: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      client<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>CheckAuthenticationPassword</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">AuthorizationRequestHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>AuthorizationStateReady</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span></span>
<span class="line">      haveAuthorization <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">      authorizationLock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">        gotAuthorization<span class="token punctuation">.</span><span class="token function">signal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span></span>
<span class="line">        authorizationLock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>AuthorizationStateLoggingOut</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span></span>
<span class="line">      haveAuthorization <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Logging out&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>AuthorizationStateClosing</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span></span>
<span class="line">      haveAuthorization <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Closing&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>AuthorizationStateClosed</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span></span>
<span class="line">      <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Closed&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>needQuit<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        client <span class="token operator">=</span> <span class="token class-name">Client</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">UpdateHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// recreate client after previous has closed</span></span>
<span class="line">      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">        canQuit <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">default</span><span class="token operator">:</span></span>
<span class="line">      <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Unsupported authorization state:&quot;</span> <span class="token operator">+</span> newLine <span class="token operator">+</span> <span class="token class-name">Example</span><span class="token punctuation">.</span>authorizationState<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">toInt</span><span class="token punctuation">(</span><span class="token class-name">String</span> arg<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">      result <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NumberFormatException</span> ignored<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">return</span> result<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">long</span> <span class="token function">getChatId</span><span class="token punctuation">(</span><span class="token class-name">String</span> arg<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">long</span> chatId <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">      chatId <span class="token operator">=</span> <span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">parseLong</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NumberFormatException</span> ignored<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">return</span> chatId<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">promptString</span><span class="token punctuation">(</span><span class="token class-name">String</span> prompt<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>prompt<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    currentPrompt <span class="token operator">=</span> prompt<span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">BufferedReader</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">      str <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    currentPrompt <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">return</span> str<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">getCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">String</span> command <span class="token operator">=</span> <span class="token function">promptString</span><span class="token punctuation">(</span>commandsLine<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> commands <span class="token operator">=</span> command<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">switch</span> <span class="token punctuation">(</span>commands<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token string">&quot;gcs&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">int</span> limit <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>commands<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          limit <span class="token operator">=</span> <span class="token function">toInt</span><span class="token punctuation">(</span>commands<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token function">getMainChatList</span><span class="token punctuation">(</span>limit<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token string">&quot;gc&quot;</span><span class="token operator">:</span></span>
<span class="line">        client<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>GetChat</span><span class="token punctuation">(</span><span class="token function">getChatId</span><span class="token punctuation">(</span>commands<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> defaultHandler<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token string">&quot;me&quot;</span><span class="token operator">:</span></span>
<span class="line">        client<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>GetMe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> defaultHandler<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token string">&quot;sm&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args <span class="token operator">=</span> commands<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token function">sendMessage</span><span class="token punctuation">(</span><span class="token function">getChatId</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token string">&quot;lo&quot;</span><span class="token operator">:</span></span>
<span class="line">        haveAuthorization <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">        client<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>LogOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> defaultHandler<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token string">&quot;q&quot;</span><span class="token operator">:</span></span>
<span class="line">        needQuit <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">        haveAuthorization <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">        client<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> defaultHandler<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">default</span><span class="token operator">:</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Unsupported command: &quot;</span> <span class="token operator">+</span> command<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ArrayIndexOutOfBoundsException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Not enough arguments&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">getMainChatList</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token keyword">int</span> limit<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>mainChatList<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>haveFullMainChatList <span class="token operator">&amp;&amp;</span> limit <span class="token operator">&gt;</span> mainChatList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// send LoadChats request if there are some unknown chats and have not enough known chats</span></span>
<span class="line">        client<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>LoadChats</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>ChatListMain</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> limit <span class="token operator">-</span> mainChatList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Client<span class="token punctuation">.</span>ResultHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token annotation punctuation">@Override</span></span>
<span class="line">          <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onResult</span><span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>Object</span> object<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">switch</span> <span class="token punctuation">(</span>object<span class="token punctuation">.</span><span class="token function">getConstructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>Error</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span></span>
<span class="line">              <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>Error</span><span class="token punctuation">)</span> object<span class="token punctuation">)</span><span class="token punctuation">.</span>code <span class="token operator">==</span> <span class="token number">404</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>mainChatList<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                  haveFullMainChatList <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">              <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Receive an error for LoadChats:&quot;</span> <span class="token operator">+</span> newLine <span class="token operator">+</span> object<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">              <span class="token punctuation">}</span></span>
<span class="line">              <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>Ok</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span></span>
<span class="line">              <span class="token comment">// chats had already been received through updates, let&#39;s retry request</span></span>
<span class="line">              <span class="token function">getMainChatList</span><span class="token punctuation">(</span>limit<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">              <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">default</span><span class="token operator">:</span></span>
<span class="line">              <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Receive wrong response from TDLib:&quot;</span> <span class="token operator">+</span> newLine <span class="token operator">+</span> object<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">          <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">      <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OrderedChat</span><span class="token punctuation">&gt;</span></span> iter <span class="token operator">=</span> mainChatList<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;First &quot;</span> <span class="token operator">+</span> limit <span class="token operator">+</span> <span class="token string">&quot; chat(s) out of &quot;</span> <span class="token operator">+</span> mainChatList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; known chat(s):&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> limit <span class="token operator">&amp;&amp;</span> i <span class="token operator">&lt;</span> mainChatList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">long</span> chatId <span class="token operator">=</span> iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>chatId<span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>Chat</span> chat <span class="token operator">=</span> chats<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>chatId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>chat<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>chatId <span class="token operator">+</span> <span class="token string">&quot;: &quot;</span> <span class="token operator">+</span> chat<span class="token punctuation">.</span>title<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">sendMessage</span><span class="token punctuation">(</span><span class="token keyword">long</span> chatId<span class="token punctuation">,</span> <span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// initialize reply markup just for testing</span></span>
<span class="line">    <span class="token class-name">TdApi<span class="token punctuation">.</span>InlineKeyboardButton</span><span class="token punctuation">[</span><span class="token punctuation">]</span> row <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>InlineKeyboardButton</span><span class="token punctuation">(</span><span class="token string">&quot;https://telegram.org?1&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>InlineKeyboardButtonTypeUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>InlineKeyboardButton</span><span class="token punctuation">(</span><span class="token string">&quot;https://telegram.org?2&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>InlineKeyboardButtonTypeUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>InlineKeyboardButton</span><span class="token punctuation">(</span><span class="token string">&quot;https://telegram.org?3&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>InlineKeyboardButtonTypeUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">TdApi<span class="token punctuation">.</span>ReplyMarkup</span> replyMarkup <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>ReplyMarkupInlineKeyboard</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>InlineKeyboardButton</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> row<span class="token punctuation">,</span> row<span class="token punctuation">,</span> row <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token class-name">TdApi<span class="token punctuation">.</span>InputMessageContent</span> content <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>InputMessageText</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>FormattedText</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    client<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>SendMessage</span><span class="token punctuation">(</span>chatId<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> replyMarkup<span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token punctuation">,</span> defaultHandler<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// set log message handler to handle only fatal errors (0) and plain log messages (-1)</span></span>
<span class="line">    <span class="token class-name">Client</span><span class="token punctuation">.</span><span class="token function">setLogMessageHandler</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">LogMessageHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// disable TDLib log and redirect fatal errors and plain log messages to a file</span></span>
<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token class-name">Client</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>SetLogVerbosityLevel</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token class-name">Client</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>SetLogStream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>LogStreamFile</span><span class="token punctuation">(</span><span class="token string">&quot;tdlib.log&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">27</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Client<span class="token punctuation">.</span>ExecutionException</span> error<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IOError</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">IOException</span><span class="token punctuation">(</span><span class="token string">&quot;Write access to the current directory is required&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// create client</span></span>
<span class="line">    client <span class="token operator">=</span> <span class="token class-name">Client</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">UpdateHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// main loop</span></span>
<span class="line">    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>needQuit<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// await authorization</span></span>
<span class="line">      authorizationLock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>haveAuthorization<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          gotAuthorization<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span></span>
<span class="line">        authorizationLock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">      <span class="token keyword">while</span> <span class="token punctuation">(</span>haveAuthorization<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">getCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>canQuit<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">OrderedChat</span> <span class="token keyword">implements</span> <span class="token class-name">Comparable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OrderedChat</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">final</span> <span class="token keyword">long</span> chatId<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">final</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>ChatPosition</span> position<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token class-name">OrderedChat</span><span class="token punctuation">(</span><span class="token keyword">long</span> chatId<span class="token punctuation">,</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>ChatPosition</span> position<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span>chatId <span class="token operator">=</span> chatId<span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span>position <span class="token operator">=</span> position<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compareTo</span><span class="token punctuation">(</span><span class="token class-name">OrderedChat</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>position<span class="token punctuation">.</span>order <span class="token operator">!=</span> o<span class="token punctuation">.</span>position<span class="token punctuation">.</span>order<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> o<span class="token punctuation">.</span>position<span class="token punctuation">.</span>order <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>position<span class="token punctuation">.</span>order <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>chatId <span class="token operator">!=</span> o<span class="token punctuation">.</span>chatId<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> o<span class="token punctuation">.</span>chatId <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>chatId <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Object</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token class-name">OrderedChat</span> o <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">OrderedChat</span><span class="token punctuation">)</span> obj<span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>chatId <span class="token operator">==</span> o<span class="token punctuation">.</span>chatId <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>position<span class="token punctuation">.</span>order <span class="token operator">==</span> o<span class="token punctuation">.</span>position<span class="token punctuation">.</span>order<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">DefaultHandler</span> <span class="token keyword">implements</span> <span class="token class-name">Client<span class="token punctuation">.</span>ResultHandler</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onResult</span><span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>Object</span> object<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">print</span><span class="token punctuation">(</span>object<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">UpdateHandler</span> <span class="token keyword">implements</span> <span class="token class-name">Client<span class="token punctuation">.</span>ResultHandler</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onResult</span><span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>Object</span> object<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">switch</span> <span class="token punctuation">(</span>object<span class="token punctuation">.</span><span class="token function">getConstructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateAuthorizationState</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span></span>
<span class="line">        <span class="token function">onAuthorizationStateUpdated</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateAuthorizationState</span><span class="token punctuation">)</span> object<span class="token punctuation">)</span><span class="token punctuation">.</span>authorizationState<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">      <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateUser</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateUser</span> updateUser <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateUser</span><span class="token punctuation">)</span> object<span class="token punctuation">;</span></span>
<span class="line">        users<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>updateUser<span class="token punctuation">.</span>user<span class="token punctuation">.</span>id<span class="token punctuation">,</span> updateUser<span class="token punctuation">.</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateUserStatus</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateUserStatus</span> updateUserStatus <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateUserStatus</span><span class="token punctuation">)</span> object<span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>User</span> user <span class="token operator">=</span> users<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>updateUserStatus<span class="token punctuation">.</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>user<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          user<span class="token punctuation">.</span>status <span class="token operator">=</span> updateUserStatus<span class="token punctuation">.</span>status<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateBasicGroup</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateBasicGroup</span> updateBasicGroup <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateBasicGroup</span><span class="token punctuation">)</span> object<span class="token punctuation">;</span></span>
<span class="line">        basicGroups<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>updateBasicGroup<span class="token punctuation">.</span>basicGroup<span class="token punctuation">.</span>id<span class="token punctuation">,</span> updateBasicGroup<span class="token punctuation">.</span>basicGroup<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateSupergroup</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateSupergroup</span> updateSupergroup <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateSupergroup</span><span class="token punctuation">)</span> object<span class="token punctuation">;</span></span>
<span class="line">        supergroups<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>updateSupergroup<span class="token punctuation">.</span>supergroup<span class="token punctuation">.</span>id<span class="token punctuation">,</span> updateSupergroup<span class="token punctuation">.</span>supergroup<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateSecretChat</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateSecretChat</span> updateSecretChat <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateSecretChat</span><span class="token punctuation">)</span> object<span class="token punctuation">;</span></span>
<span class="line">        secretChats<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>updateSecretChat<span class="token punctuation">.</span>secretChat<span class="token punctuation">.</span>id<span class="token punctuation">,</span> updateSecretChat<span class="token punctuation">.</span>secretChat<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">      <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateNewChat</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateNewChat</span> updateNewChat <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateNewChat</span><span class="token punctuation">)</span> object<span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>Chat</span> chat <span class="token operator">=</span> updateNewChat<span class="token punctuation">.</span>chat<span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>chat<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          chats<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>chat<span class="token punctuation">.</span>id<span class="token punctuation">,</span> chat<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">          <span class="token class-name">TdApi<span class="token punctuation">.</span>ChatPosition</span><span class="token punctuation">[</span><span class="token punctuation">]</span> positions <span class="token operator">=</span> chat<span class="token punctuation">.</span>positions<span class="token punctuation">;</span></span>
<span class="line">          chat<span class="token punctuation">.</span>positions <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>ChatPosition</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">          <span class="token function">setChatPositions</span><span class="token punctuation">(</span>chat<span class="token punctuation">,</span> positions<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatTitle</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatTitle</span> updateChat <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatTitle</span><span class="token punctuation">)</span> object<span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>Chat</span> chat <span class="token operator">=</span> chats<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>updateChat<span class="token punctuation">.</span>chatId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>chat<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          chat<span class="token punctuation">.</span>title <span class="token operator">=</span> updateChat<span class="token punctuation">.</span>title<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatPhoto</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatPhoto</span> updateChat <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatPhoto</span><span class="token punctuation">)</span> object<span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>Chat</span> chat <span class="token operator">=</span> chats<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>updateChat<span class="token punctuation">.</span>chatId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>chat<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          chat<span class="token punctuation">.</span>photo <span class="token operator">=</span> updateChat<span class="token punctuation">.</span>photo<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatPermissions</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatPermissions</span> update <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatPermissions</span><span class="token punctuation">)</span> object<span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>Chat</span> chat <span class="token operator">=</span> chats<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>update<span class="token punctuation">.</span>chatId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>chat<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          chat<span class="token punctuation">.</span>permissions <span class="token operator">=</span> update<span class="token punctuation">.</span>permissions<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatLastMessage</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatLastMessage</span> updateChat <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatLastMessage</span><span class="token punctuation">)</span> object<span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>Chat</span> chat <span class="token operator">=</span> chats<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>updateChat<span class="token punctuation">.</span>chatId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>chat<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          chat<span class="token punctuation">.</span>lastMessage <span class="token operator">=</span> updateChat<span class="token punctuation">.</span>lastMessage<span class="token punctuation">;</span></span>
<span class="line">          <span class="token function">setChatPositions</span><span class="token punctuation">(</span>chat<span class="token punctuation">,</span> updateChat<span class="token punctuation">.</span>positions<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatPosition</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatPosition</span> updateChat <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatPosition</span><span class="token punctuation">)</span> object<span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>updateChat<span class="token punctuation">.</span>position<span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">getConstructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>ChatListMain</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>Chat</span> chat <span class="token operator">=</span> chats<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>updateChat<span class="token punctuation">.</span>chatId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>chat<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token keyword">int</span> i<span class="token punctuation">;</span></span>
<span class="line">          <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> chat<span class="token punctuation">.</span>positions<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>chat<span class="token punctuation">.</span>positions<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">getConstructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>ChatListMain</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">              <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">          <span class="token punctuation">}</span></span>
<span class="line">          <span class="token class-name">TdApi<span class="token punctuation">.</span>ChatPosition</span><span class="token punctuation">[</span><span class="token punctuation">]</span> new_positions <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>ChatPosition</span><span class="token punctuation">[</span>chat<span class="token punctuation">.</span>positions<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token punctuation">(</span>updateChat<span class="token punctuation">.</span>position<span class="token punctuation">.</span>order <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> chat<span class="token punctuation">.</span>positions<span class="token punctuation">.</span>length <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">          <span class="token keyword">int</span> pos <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">          <span class="token keyword">if</span> <span class="token punctuation">(</span>updateChat<span class="token punctuation">.</span>position<span class="token punctuation">.</span>order <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            new_positions<span class="token punctuation">[</span>pos<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> updateChat<span class="token punctuation">.</span>position<span class="token punctuation">;</span></span>
<span class="line">          <span class="token punctuation">}</span></span>
<span class="line">          <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> chat<span class="token punctuation">.</span>positions<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">!=</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">              new_positions<span class="token punctuation">[</span>pos<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> chat<span class="token punctuation">.</span>positions<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">          <span class="token punctuation">}</span></span>
<span class="line">          <span class="token keyword">assert</span> pos <span class="token operator">==</span> new_positions<span class="token punctuation">.</span>length<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">          <span class="token function">setChatPositions</span><span class="token punctuation">(</span>chat<span class="token punctuation">,</span> new_positions<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatReadInbox</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatReadInbox</span> updateChat <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatReadInbox</span><span class="token punctuation">)</span> object<span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>Chat</span> chat <span class="token operator">=</span> chats<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>updateChat<span class="token punctuation">.</span>chatId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>chat<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          chat<span class="token punctuation">.</span>lastReadInboxMessageId <span class="token operator">=</span> updateChat<span class="token punctuation">.</span>lastReadInboxMessageId<span class="token punctuation">;</span></span>
<span class="line">          chat<span class="token punctuation">.</span>unreadCount <span class="token operator">=</span> updateChat<span class="token punctuation">.</span>unreadCount<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatReadOutbox</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatReadOutbox</span> updateChat <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatReadOutbox</span><span class="token punctuation">)</span> object<span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>Chat</span> chat <span class="token operator">=</span> chats<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>updateChat<span class="token punctuation">.</span>chatId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>chat<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          chat<span class="token punctuation">.</span>lastReadOutboxMessageId <span class="token operator">=</span> updateChat<span class="token punctuation">.</span>lastReadOutboxMessageId<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatActionBar</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatActionBar</span> updateChat <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatActionBar</span><span class="token punctuation">)</span> object<span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>Chat</span> chat <span class="token operator">=</span> chats<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>updateChat<span class="token punctuation">.</span>chatId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>chat<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          chat<span class="token punctuation">.</span>actionBar <span class="token operator">=</span> updateChat<span class="token punctuation">.</span>actionBar<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatAvailableReactions</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatAvailableReactions</span> updateChat <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatAvailableReactions</span><span class="token punctuation">)</span> object<span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>Chat</span> chat <span class="token operator">=</span> chats<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>updateChat<span class="token punctuation">.</span>chatId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>chat<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          chat<span class="token punctuation">.</span>availableReactions <span class="token operator">=</span> updateChat<span class="token punctuation">.</span>availableReactions<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatDraftMessage</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatDraftMessage</span> updateChat <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatDraftMessage</span><span class="token punctuation">)</span> object<span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>Chat</span> chat <span class="token operator">=</span> chats<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>updateChat<span class="token punctuation">.</span>chatId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>chat<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          chat<span class="token punctuation">.</span>draftMessage <span class="token operator">=</span> updateChat<span class="token punctuation">.</span>draftMessage<span class="token punctuation">;</span></span>
<span class="line">          <span class="token function">setChatPositions</span><span class="token punctuation">(</span>chat<span class="token punctuation">,</span> updateChat<span class="token punctuation">.</span>positions<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatMessageSender</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatMessageSender</span> updateChat <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatMessageSender</span><span class="token punctuation">)</span> object<span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>Chat</span> chat <span class="token operator">=</span> chats<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>updateChat<span class="token punctuation">.</span>chatId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>chat<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          chat<span class="token punctuation">.</span>messageSenderId <span class="token operator">=</span> updateChat<span class="token punctuation">.</span>messageSenderId<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatMessageAutoDeleteTime</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatMessageAutoDeleteTime</span> updateChat <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatMessageAutoDeleteTime</span><span class="token punctuation">)</span> object<span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>Chat</span> chat <span class="token operator">=</span> chats<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>updateChat<span class="token punctuation">.</span>chatId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>chat<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          chat<span class="token punctuation">.</span>messageAutoDeleteTime <span class="token operator">=</span> updateChat<span class="token punctuation">.</span>messageAutoDeleteTime<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatNotificationSettings</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatNotificationSettings</span> update <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatNotificationSettings</span><span class="token punctuation">)</span> object<span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>Chat</span> chat <span class="token operator">=</span> chats<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>update<span class="token punctuation">.</span>chatId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>chat<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          chat<span class="token punctuation">.</span>notificationSettings <span class="token operator">=</span> update<span class="token punctuation">.</span>notificationSettings<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatPendingJoinRequests</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatPendingJoinRequests</span> update <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatPendingJoinRequests</span><span class="token punctuation">)</span> object<span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>Chat</span> chat <span class="token operator">=</span> chats<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>update<span class="token punctuation">.</span>chatId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>chat<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          chat<span class="token punctuation">.</span>pendingJoinRequests <span class="token operator">=</span> update<span class="token punctuation">.</span>pendingJoinRequests<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatReplyMarkup</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatReplyMarkup</span> updateChat <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatReplyMarkup</span><span class="token punctuation">)</span> object<span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>Chat</span> chat <span class="token operator">=</span> chats<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>updateChat<span class="token punctuation">.</span>chatId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>chat<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          chat<span class="token punctuation">.</span>replyMarkupMessageId <span class="token operator">=</span> updateChat<span class="token punctuation">.</span>replyMarkupMessageId<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatBackground</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatBackground</span> updateChat <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatBackground</span><span class="token punctuation">)</span> object<span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>Chat</span> chat <span class="token operator">=</span> chats<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>updateChat<span class="token punctuation">.</span>chatId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>chat<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          chat<span class="token punctuation">.</span>background <span class="token operator">=</span> updateChat<span class="token punctuation">.</span>background<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatTheme</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatTheme</span> updateChat <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatTheme</span><span class="token punctuation">)</span> object<span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>Chat</span> chat <span class="token operator">=</span> chats<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>updateChat<span class="token punctuation">.</span>chatId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>chat<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          chat<span class="token punctuation">.</span>themeName <span class="token operator">=</span> updateChat<span class="token punctuation">.</span>themeName<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatUnreadMentionCount</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatUnreadMentionCount</span> updateChat <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatUnreadMentionCount</span><span class="token punctuation">)</span> object<span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>Chat</span> chat <span class="token operator">=</span> chats<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>updateChat<span class="token punctuation">.</span>chatId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>chat<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          chat<span class="token punctuation">.</span>unreadMentionCount <span class="token operator">=</span> updateChat<span class="token punctuation">.</span>unreadMentionCount<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatUnreadReactionCount</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatUnreadReactionCount</span> updateChat <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatUnreadReactionCount</span><span class="token punctuation">)</span> object<span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>Chat</span> chat <span class="token operator">=</span> chats<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>updateChat<span class="token punctuation">.</span>chatId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>chat<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          chat<span class="token punctuation">.</span>unreadReactionCount <span class="token operator">=</span> updateChat<span class="token punctuation">.</span>unreadReactionCount<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatVideoChat</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatVideoChat</span> updateChat <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatVideoChat</span><span class="token punctuation">)</span> object<span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>Chat</span> chat <span class="token operator">=</span> chats<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>updateChat<span class="token punctuation">.</span>chatId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>chat<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          chat<span class="token punctuation">.</span>videoChat <span class="token operator">=</span> updateChat<span class="token punctuation">.</span>videoChat<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatDefaultDisableNotification</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatDefaultDisableNotification</span> update <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatDefaultDisableNotification</span><span class="token punctuation">)</span> object<span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>Chat</span> chat <span class="token operator">=</span> chats<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>update<span class="token punctuation">.</span>chatId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>chat<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          chat<span class="token punctuation">.</span>defaultDisableNotification <span class="token operator">=</span> update<span class="token punctuation">.</span>defaultDisableNotification<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatHasProtectedContent</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatHasProtectedContent</span> updateChat <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatHasProtectedContent</span><span class="token punctuation">)</span> object<span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>Chat</span> chat <span class="token operator">=</span> chats<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>updateChat<span class="token punctuation">.</span>chatId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>chat<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          chat<span class="token punctuation">.</span>hasProtectedContent <span class="token operator">=</span> updateChat<span class="token punctuation">.</span>hasProtectedContent<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatIsTranslatable</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatIsTranslatable</span> update <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatIsTranslatable</span><span class="token punctuation">)</span> object<span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>Chat</span> chat <span class="token operator">=</span> chats<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>update<span class="token punctuation">.</span>chatId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>chat<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          chat<span class="token punctuation">.</span>isTranslatable <span class="token operator">=</span> update<span class="token punctuation">.</span>isTranslatable<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatIsMarkedAsUnread</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatIsMarkedAsUnread</span> update <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatIsMarkedAsUnread</span><span class="token punctuation">)</span> object<span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>Chat</span> chat <span class="token operator">=</span> chats<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>update<span class="token punctuation">.</span>chatId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>chat<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          chat<span class="token punctuation">.</span>isMarkedAsUnread <span class="token operator">=</span> update<span class="token punctuation">.</span>isMarkedAsUnread<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatBlockList</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatBlockList</span> update <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatBlockList</span><span class="token punctuation">)</span> object<span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>Chat</span> chat <span class="token operator">=</span> chats<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>update<span class="token punctuation">.</span>chatId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>chat<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          chat<span class="token punctuation">.</span>blockList <span class="token operator">=</span> update<span class="token punctuation">.</span>blockList<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatHasScheduledMessages</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatHasScheduledMessages</span> update <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateChatHasScheduledMessages</span><span class="token punctuation">)</span> object<span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>Chat</span> chat <span class="token operator">=</span> chats<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>update<span class="token punctuation">.</span>chatId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>chat<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          chat<span class="token punctuation">.</span>hasScheduledMessages <span class="token operator">=</span> update<span class="token punctuation">.</span>hasScheduledMessages<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">      <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateMessageMentionRead</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateMessageMentionRead</span> updateChat <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateMessageMentionRead</span><span class="token punctuation">)</span> object<span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>Chat</span> chat <span class="token operator">=</span> chats<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>updateChat<span class="token punctuation">.</span>chatId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>chat<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          chat<span class="token punctuation">.</span>unreadMentionCount <span class="token operator">=</span> updateChat<span class="token punctuation">.</span>unreadMentionCount<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateMessageUnreadReactions</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateMessageUnreadReactions</span> updateChat <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateMessageUnreadReactions</span><span class="token punctuation">)</span> object<span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>Chat</span> chat <span class="token operator">=</span> chats<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>updateChat<span class="token punctuation">.</span>chatId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>chat<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          chat<span class="token punctuation">.</span>unreadReactionCount <span class="token operator">=</span> updateChat<span class="token punctuation">.</span>unreadReactionCount<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">      <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateUserFullInfo</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateUserFullInfo</span> updateUserFullInfo <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateUserFullInfo</span><span class="token punctuation">)</span> object<span class="token punctuation">;</span></span>
<span class="line">        usersFullInfo<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>updateUserFullInfo<span class="token punctuation">.</span>userId<span class="token punctuation">,</span> updateUserFullInfo<span class="token punctuation">.</span>userFullInfo<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateBasicGroupFullInfo</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateBasicGroupFullInfo</span> updateBasicGroupFullInfo <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateBasicGroupFullInfo</span><span class="token punctuation">)</span> object<span class="token punctuation">;</span></span>
<span class="line">        basicGroupsFullInfo<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>updateBasicGroupFullInfo<span class="token punctuation">.</span>basicGroupId<span class="token punctuation">,</span> updateBasicGroupFullInfo<span class="token punctuation">.</span>basicGroupFullInfo<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateSupergroupFullInfo</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span></span>
<span class="line">        <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateSupergroupFullInfo</span> updateSupergroupFullInfo <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateSupergroupFullInfo</span><span class="token punctuation">)</span> object<span class="token punctuation">;</span></span>
<span class="line">        supergroupsFullInfo<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>updateSupergroupFullInfo<span class="token punctuation">.</span>supergroupId<span class="token punctuation">,</span> updateSupergroupFullInfo<span class="token punctuation">.</span>supergroupFullInfo<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">default</span><span class="token operator">:</span></span>
<span class="line">        <span class="token comment">// print(&quot;Unsupported update:&quot; + newLine + object);</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">AuthorizationRequestHandler</span> <span class="token keyword">implements</span> <span class="token class-name">Client<span class="token punctuation">.</span>ResultHandler</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onResult</span><span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>Object</span> object<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">switch</span> <span class="token punctuation">(</span>object<span class="token punctuation">.</span><span class="token function">getConstructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>Error</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Receive an error:&quot;</span> <span class="token operator">+</span> newLine <span class="token operator">+</span> object<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token function">onAuthorizationStateUpdated</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// repeat last action</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>Ok</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span></span>
<span class="line">        <span class="token comment">// result is already received through UpdateAuthorizationState, nothing to do</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">default</span><span class="token operator">:</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Receive wrong response from TDLib:&quot;</span> <span class="token operator">+</span> newLine <span class="token operator">+</span> object<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">LogMessageHandler</span> <span class="token keyword">implements</span> <span class="token class-name">Client<span class="token punctuation">.</span>LogMessageHandler</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onLogMessage</span><span class="token punctuation">(</span><span class="token keyword">int</span> verbosityLevel<span class="token punctuation">,</span> <span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>verbosityLevel <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">onFatalError</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">onFatalError</span><span class="token punctuation">(</span><span class="token class-name">String</span> errorMessage<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">ThrowError</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> errorMessage<span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">AtomicLong</span> errorThrowTime<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">      <span class="token keyword">private</span> <span class="token class-name">ThrowError</span><span class="token punctuation">(</span><span class="token class-name">String</span> errorMessage<span class="token punctuation">,</span> <span class="token class-name">AtomicLong</span> errorThrowTime<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>errorMessage <span class="token operator">=</span> errorMessage<span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>errorThrowTime <span class="token operator">=</span> errorThrowTime<span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">      <span class="token annotation punctuation">@Override</span></span>
<span class="line">      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDatabaseBrokenError</span><span class="token punctuation">(</span>errorMessage<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">isDiskFullError</span><span class="token punctuation">(</span>errorMessage<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">isDiskError</span><span class="token punctuation">(</span>errorMessage<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token function">processExternalError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">          <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        errorThrowTime<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ClientError</span><span class="token punctuation">(</span><span class="token string">&quot;TDLib fatal error: &quot;</span> <span class="token operator">+</span> errorMessage<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">      <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">processExternalError</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        errorThrowTime<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ExternalClientError</span><span class="token punctuation">(</span><span class="token string">&quot;Fatal error: &quot;</span> <span class="token operator">+</span> errorMessage<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">      <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">ClientError</span> <span class="token keyword">extends</span> <span class="token class-name">Error</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">private</span> <span class="token class-name">ClientError</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token keyword">super</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">      <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">ExternalClientError</span> <span class="token keyword">extends</span> <span class="token class-name">Error</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">public</span> <span class="token class-name">ExternalClientError</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token keyword">super</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">      <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">isDatabaseBrokenError</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> message<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;Wrong key or database is corrupted&quot;</span><span class="token punctuation">)</span> <span class="token operator">||</span> message<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;SQL logic error or missing database&quot;</span><span class="token punctuation">)</span> <span class="token operator">||</span> message<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;database disk image is malformed&quot;</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token operator">||</span> message<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;file is encrypted or is not a database&quot;</span><span class="token punctuation">)</span> <span class="token operator">||</span> message<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;unsupported file format&quot;</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token operator">||</span> message<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;Database was corrupted and deleted during execution and can&#39;t be recreated&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">      <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">isDiskFullError</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> message<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;PosixError : No space left on device&quot;</span><span class="token punctuation">)</span> <span class="token operator">||</span> message<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;database or disk is full&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">      <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">isDiskError</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> message<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;I/O error&quot;</span><span class="token punctuation">)</span> <span class="token operator">||</span> message<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;Structure needs cleaning&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">final</span> <span class="token class-name">AtomicLong</span> errorThrowTime <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicLong</span><span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token constant">MAX_VALUE</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ThrowError</span><span class="token punctuation">(</span>errorMessage<span class="token punctuation">,</span> errorThrowTime<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;TDLib fatal error thread&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// wait at least 10 seconds after the error is thrown</span></span>
<span class="line">    <span class="token keyword">while</span> <span class="token punctuation">(</span>errorThrowTime<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">10000</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span> <span class="token comment">/* milliseconds */</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> ignore<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">interrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="代码解释" tabindex="-1"><a class="header-anchor" href="#代码解释"><span>代码解释</span></a></h2><p>该示例代码展示了如何使用 <strong>java-td-lib</strong> 与 Telegram 进行交互，涵盖了授权流程、处理更新、发送消息等基本操作。以下是对代码各部分的详细解释：</p><h3 id="_1-导入必要的包" tabindex="-1"><a class="header-anchor" href="#_1-导入必要的包"><span>1. 导入必要的包</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">BufferedReader</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOError</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">InputStreamReader</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">NavigableSet</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">TreeSet</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">ConcurrentHashMap</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">ConcurrentMap</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>atomic<span class="token punctuation">.</span></span><span class="token class-name">AtomicLong</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>locks<span class="token punctuation">.</span></span><span class="token class-name">Condition</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>locks<span class="token punctuation">.</span></span><span class="token class-name">Lock</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>locks<span class="token punctuation">.</span></span><span class="token class-name">ReentrantLock</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>drinkless<span class="token punctuation">.</span>tdlib<span class="token punctuation">.</span></span><span class="token class-name">Client</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>drinkless<span class="token punctuation">.</span>tdlib<span class="token punctuation">.</span></span><span class="token class-name">TdApi</span></span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>Java 标准库</strong>：用于输入输出、数据结构、并发控制等。</li><li><strong>TDLib 库</strong>：<code>Client</code> 和 <code>TdApi</code> 是与 Telegram 服务器通信的核心类。</li></ul><h3 id="_2-定义类和变量" tabindex="-1"><a class="header-anchor" href="#_2-定义类和变量"><span>2. 定义类和变量</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Example</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Client</span> client <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>AuthorizationState</span> authorizationState <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">volatile</span> <span class="token keyword">boolean</span> haveAuthorization <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">volatile</span> <span class="token keyword">boolean</span> needQuit <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">volatile</span> <span class="token keyword">boolean</span> canQuit <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Client<span class="token punctuation">.</span>ResultHandler</span> defaultHandler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Lock</span> authorizationLock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Condition</span> gotAuthorization <span class="token operator">=</span> authorizationLock<span class="token punctuation">.</span><span class="token function">newCondition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">ConcurrentMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>User</span><span class="token punctuation">&gt;</span></span> users <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// ... 其他映射表和变量</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong><code>client</code></strong>：TDLib 客户端实例。</li><li><strong>授权相关变量</strong>：跟踪授权状态和控制应用退出流程。</li><li><strong>并发数据结构</strong>：用于存储用户、群组、聊天等信息，确保线程安全。</li><li><strong>锁和条件变量</strong>：用于在多线程环境下控制授权流程。</li></ul><h3 id="_3-打印辅助方法" tabindex="-1"><a class="header-anchor" href="#_3-打印辅助方法"><span>3. 打印辅助方法</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>currentPrompt <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>currentPrompt <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>currentPrompt<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong><code>print</code> 方法</strong>：用于在控制台输出信息，确保在提示输入时格式正确。</li></ul><h3 id="_4-设置聊天位置" tabindex="-1"><a class="header-anchor" href="#_4-设置聊天位置"><span>4. 设置聊天位置</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">setChatPositions</span><span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>Chat</span> chat<span class="token punctuation">,</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>ChatPosition</span><span class="token punctuation">[</span><span class="token punctuation">]</span> positions<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>mainChatList<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>chat<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>ChatPosition</span> position <span class="token operator">:</span> chat<span class="token punctuation">.</span>positions<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>position<span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">getConstructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>ChatListMain</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          mainChatList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">OrderedChat</span><span class="token punctuation">(</span>chat<span class="token punctuation">.</span>id<span class="token punctuation">,</span> position<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">      chat<span class="token punctuation">.</span>positions <span class="token operator">=</span> positions<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>ChatPosition</span> position <span class="token operator">:</span> chat<span class="token punctuation">.</span>positions<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>position<span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">getConstructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>ChatListMain</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          mainChatList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">OrderedChat</span><span class="token punctuation">(</span>chat<span class="token punctuation">.</span>id<span class="token punctuation">,</span> position<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong><code>setChatPositions</code> 方法</strong>：更新聊天在主聊天列表中的位置，确保聊天按照指定顺序排列。</li></ul><h3 id="_5-处理授权状态更新" tabindex="-1"><a class="header-anchor" href="#_5-处理授权状态更新"><span>5. 处理授权状态更新</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">onAuthorizationStateUpdated</span><span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>AuthorizationState</span> authorizationState<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 更新当前授权状态</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>authorizationState <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">Example</span><span class="token punctuation">.</span>authorizationState <span class="token operator">=</span> authorizationState<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token class-name">Example</span><span class="token punctuation">.</span>authorizationState<span class="token punctuation">.</span><span class="token function">getConstructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>AuthorizationStateWaitTdlibParameters</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span></span>
<span class="line">      <span class="token comment">// 设置 TDLib 参数</span></span>
<span class="line">      <span class="token class-name">TdApi<span class="token punctuation">.</span>SetTdlibParameters</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>SetTdlibParameters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      request<span class="token punctuation">.</span>databaseDirectory <span class="token operator">=</span> <span class="token string">&quot;tdlib&quot;</span><span class="token punctuation">;</span></span>
<span class="line">      request<span class="token punctuation">.</span>useMessageDatabase <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">      request<span class="token punctuation">.</span>useSecretChats <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">      request<span class="token punctuation">.</span>apiId <span class="token operator">=</span> <span class="token number">94575</span><span class="token punctuation">;</span></span>
<span class="line">      request<span class="token punctuation">.</span>apiHash <span class="token operator">=</span> <span class="token string">&quot;a3406de8d171bb422bb6ddf3bbd800e2&quot;</span><span class="token punctuation">;</span></span>
<span class="line">      request<span class="token punctuation">.</span>systemLanguageCode <span class="token operator">=</span> <span class="token string">&quot;en&quot;</span><span class="token punctuation">;</span></span>
<span class="line">      request<span class="token punctuation">.</span>deviceModel <span class="token operator">=</span> <span class="token string">&quot;Desktop&quot;</span><span class="token punctuation">;</span></span>
<span class="line">      request<span class="token punctuation">.</span>applicationVersion <span class="token operator">=</span> <span class="token string">&quot;1.0&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">      client<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">AuthorizationRequestHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// 处理其他授权状态，如等待手机号、验证码、注册等</span></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line">    <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>AuthorizationStateReady</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span></span>
<span class="line">      haveAuthorization <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">      authorizationLock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">        gotAuthorization<span class="token punctuation">.</span><span class="token function">signal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span></span>
<span class="line">        authorizationLock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// 处理登出、关闭等状态</span></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line">    <span class="token keyword">default</span><span class="token operator">:</span></span>
<span class="line">      <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;不支持的授权状态:&quot;</span> <span class="token operator">+</span> newLine <span class="token operator">+</span> <span class="token class-name">Example</span><span class="token punctuation">.</span>authorizationState<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>授权流程</strong>：根据不同的授权状态，发送相应的请求，如设置参数、输入手机号、验证码、注册信息等。</li><li><strong>状态转换</strong>：当授权完成 (<code>AuthorizationStateReady</code>) 时，更新标志并通知主线程。</li></ul><h3 id="_6-辅助方法" tabindex="-1"><a class="header-anchor" href="#_6-辅助方法"><span>6. 辅助方法</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">toInt</span><span class="token punctuation">(</span><span class="token class-name">String</span> arg<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">    result <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NumberFormatException</span> ignored<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token keyword">return</span> result<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">long</span> <span class="token function">getChatId</span><span class="token punctuation">(</span><span class="token class-name">String</span> arg<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">long</span> chatId <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">    chatId <span class="token operator">=</span> <span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">parseLong</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NumberFormatException</span> ignored<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token keyword">return</span> chatId<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">promptString</span><span class="token punctuation">(</span><span class="token class-name">String</span> prompt<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>prompt<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  currentPrompt <span class="token operator">=</span> prompt<span class="token punctuation">;</span></span>
<span class="line">  <span class="token class-name">BufferedReader</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">    str <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  currentPrompt <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">return</span> str<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong><code>toInt</code> 和 <code>getChatId</code> 方法</strong>：将字符串转换为整数和长整数，用于解析命令参数。</li><li><strong><code>promptString</code> 方法</strong>：在控制台提示用户输入信息，并读取输入。</li></ul><h3 id="_7-处理用户命令" tabindex="-1"><a class="header-anchor" href="#_7-处理用户命令"><span>7. 处理用户命令</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">getCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token class-name">String</span> command <span class="token operator">=</span> <span class="token function">promptString</span><span class="token punctuation">(</span>commandsLine<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> commands <span class="token operator">=</span> command<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">switch</span> <span class="token punctuation">(</span>commands<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token string">&quot;gcs&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">int</span> limit <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>commands<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          limit <span class="token operator">=</span> <span class="token function">toInt</span><span class="token punctuation">(</span>commands<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token function">getMainChatList</span><span class="token punctuation">(</span>limit<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token string">&quot;gc&quot;</span><span class="token operator">:</span></span>
<span class="line">        client<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>GetChat</span><span class="token punctuation">(</span><span class="token function">getChatId</span><span class="token punctuation">(</span>commands<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> defaultHandler<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token string">&quot;me&quot;</span><span class="token operator">:</span></span>
<span class="line">        client<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>GetMe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> defaultHandler<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token string">&quot;sm&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args <span class="token operator">=</span> commands<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token function">sendMessage</span><span class="token punctuation">(</span><span class="token function">getChatId</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token string">&quot;lo&quot;</span><span class="token operator">:</span></span>
<span class="line">        haveAuthorization <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">        client<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>LogOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> defaultHandler<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token string">&quot;q&quot;</span><span class="token operator">:</span></span>
<span class="line">        needQuit <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">        haveAuthorization <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">        client<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> defaultHandler<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">default</span><span class="token operator">:</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;不支持的命令: &quot;</span> <span class="token operator">+</span> command<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ArrayIndexOutOfBoundsException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;参数不足&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>命令解析</strong>：根据用户输入的命令执行相应操作，如获取聊天列表、获取聊天详情、获取当前用户信息、发送消息、登出和退出应用。</li></ul><h3 id="_8-获取主聊天列表" tabindex="-1"><a class="header-anchor" href="#_8-获取主聊天列表"><span>8. 获取主聊天列表</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">getMainChatList</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token keyword">int</span> limit<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>mainChatList<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>haveFullMainChatList <span class="token operator">&amp;&amp;</span> limit <span class="token operator">&gt;</span> mainChatList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// 如果有未知聊天且已知聊天数量不足，发送 LoadChats 请求</span></span>
<span class="line">      client<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>LoadChats</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>ChatListMain</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> limit <span class="token operator">-</span> mainChatList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Client<span class="token punctuation">.</span>ResultHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token annotation punctuation">@Override</span></span>
<span class="line">        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onResult</span><span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>Object</span> object<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token keyword">switch</span> <span class="token punctuation">(</span>object<span class="token punctuation">.</span><span class="token function">getConstructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>Error</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span></span>
<span class="line">              <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>Error</span><span class="token punctuation">)</span> object<span class="token punctuation">)</span><span class="token punctuation">.</span>code <span class="token operator">==</span> <span class="token number">404</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>mainChatList<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                  haveFullMainChatList <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">              <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;接收 LoadChats 错误:&quot;</span> <span class="token operator">+</span> newLine <span class="token operator">+</span> object<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">              <span class="token punctuation">}</span></span>
<span class="line">              <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>Ok</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span></span>
<span class="line">              <span class="token comment">// 通过更新接收聊天信息，重新尝试请求</span></span>
<span class="line">              <span class="token function">getMainChatList</span><span class="token punctuation">(</span>limit<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">              <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">default</span><span class="token operator">:</span></span>
<span class="line">              <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;从 TDLib 接收错误响应:&quot;</span> <span class="token operator">+</span> newLine <span class="token operator">+</span> object<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">          <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OrderedChat</span><span class="token punctuation">&gt;</span></span> iter <span class="token operator">=</span> mainChatList<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;前 &quot;</span> <span class="token operator">+</span> limit <span class="token operator">+</span> <span class="token string">&quot; 个聊天，共 &quot;</span> <span class="token operator">+</span> mainChatList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; 个已知聊天:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> limit <span class="token operator">&amp;&amp;</span> i <span class="token operator">&lt;</span> mainChatList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">long</span> chatId <span class="token operator">=</span> iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>chatId<span class="token punctuation">;</span></span>
<span class="line">      <span class="token class-name">TdApi<span class="token punctuation">.</span>Chat</span> chat <span class="token operator">=</span> chats<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>chatId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>chat<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>chatId <span class="token operator">+</span> <span class="token string">&quot;: &quot;</span> <span class="token operator">+</span> chat<span class="token punctuation">.</span>title<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong><code>getMainChatList</code> 方法</strong>：获取主聊天列表，若已知聊天数量不足则请求更多聊天信息。</li><li><strong>同步处理</strong>：确保在多线程环境下对聊天列表的操作是安全的。</li></ul><h3 id="_9-发送消息" tabindex="-1"><a class="header-anchor" href="#_9-发送消息"><span>9. 发送消息</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">sendMessage</span><span class="token punctuation">(</span><span class="token keyword">long</span> chatId<span class="token punctuation">,</span> <span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 初始化回复标记，仅用于测试</span></span>
<span class="line">  <span class="token class-name">TdApi<span class="token punctuation">.</span>InlineKeyboardButton</span><span class="token punctuation">[</span><span class="token punctuation">]</span> row <span class="token operator">=</span> <span class="token punctuation">{</span> </span>
<span class="line">    <span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>InlineKeyboardButton</span><span class="token punctuation">(</span><span class="token string">&quot;https://telegram.org?1&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>InlineKeyboardButtonTypeUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>InlineKeyboardButton</span><span class="token punctuation">(</span><span class="token string">&quot;https://telegram.org?2&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>InlineKeyboardButtonTypeUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>InlineKeyboardButton</span><span class="token punctuation">(</span><span class="token string">&quot;https://telegram.org?3&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>InlineKeyboardButtonTypeUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> </span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token class-name">TdApi<span class="token punctuation">.</span>ReplyMarkup</span> replyMarkup <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>ReplyMarkupInlineKeyboard</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>InlineKeyboardButton</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> row<span class="token punctuation">,</span> row<span class="token punctuation">,</span> row <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token class-name">TdApi<span class="token punctuation">.</span>InputMessageContent</span> content <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>InputMessageText</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>FormattedText</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  client<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>SendMessage</span><span class="token punctuation">(</span>chatId<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> replyMarkup<span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token punctuation">,</span> defaultHandler<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong><code>sendMessage</code> 方法</strong>：向指定聊天发送消息，并附带内联键盘作为回复标记。</li><li><strong>内联键盘</strong>：用于在消息中嵌入按钮，用户可以点击这些按钮执行特定操作。</li></ul><h3 id="_10-主方法" tabindex="-1"><a class="header-anchor" href="#_10-主方法"><span>10. 主方法</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 设置日志消息处理器，仅处理致命错误（0）和普通日志消息（-1）</span></span>
<span class="line">  <span class="token class-name">Client</span><span class="token punctuation">.</span><span class="token function">setLogMessageHandler</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">LogMessageHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 禁用 TDLib 日志并将致命错误和普通日志消息重定向到文件</span></span>
<span class="line">  <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">Client</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>SetLogVerbosityLevel</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">Client</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>SetLogStream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>LogStreamFile</span><span class="token punctuation">(</span><span class="token string">&quot;tdlib.log&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">27</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Client<span class="token punctuation">.</span>ExecutionException</span> error<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IOError</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">IOException</span><span class="token punctuation">(</span><span class="token string">&quot;当前目录需要写权限&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 创建客户端</span></span>
<span class="line">  client <span class="token operator">=</span> <span class="token class-name">Client</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">UpdateHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 主循环</span></span>
<span class="line">  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>needQuit<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 等待授权</span></span>
<span class="line">    authorizationLock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>haveAuthorization<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        gotAuthorization<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span></span>
<span class="line">      authorizationLock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">while</span> <span class="token punctuation">(</span>haveAuthorization<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">getCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>canQuit<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>日志配置</strong>：设置日志级别和日志输出流，将日志写入文件 <code>tdlib.log</code>。</li><li><strong>客户端创建</strong>：通过 <code>Client.create</code> 创建 TDLib 客户端，并指定更新处理器 <code>UpdateHandler</code>。</li><li><strong>主循环</strong>：等待授权完成后，持续获取并执行用户输入的命令，直到用户选择退出。</li></ul><h3 id="_11-处理更新" tabindex="-1"><a class="header-anchor" href="#_11-处理更新"><span>11. 处理更新</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">UpdateHandler</span> <span class="token keyword">implements</span> <span class="token class-name">Client<span class="token punctuation">.</span>ResultHandler</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token annotation punctuation">@Override</span></span>
<span class="line">  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onResult</span><span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>Object</span> object<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">switch</span> <span class="token punctuation">(</span>object<span class="token punctuation">.</span><span class="token function">getConstructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateAuthorizationState</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span></span>
<span class="line">        <span class="token function">onAuthorizationStateUpdated</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>UpdateAuthorizationState</span><span class="token punctuation">)</span> object<span class="token punctuation">)</span><span class="token punctuation">.</span>authorizationState<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token comment">// 处理用户、群组、聊天等的更新</span></span>
<span class="line">      <span class="token comment">// ...</span></span>
<span class="line">      <span class="token keyword">default</span><span class="token operator">:</span></span>
<span class="line">        <span class="token comment">// 其他更新不处理</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong><code>UpdateHandler</code> 类</strong>：实现 <code>Client.ResultHandler</code> 接口，用于处理来自 TDLib 的各种更新，如授权状态变化、用户信息更新、聊天信息更新等。</li><li><strong>更新类型</strong>：根据更新的构造函数 (<code>getConstructor</code>)，区分不同类型的更新，并进行相应处理。</li></ul><h3 id="_12-授权请求处理器" tabindex="-1"><a class="header-anchor" href="#_12-授权请求处理器"><span>12. 授权请求处理器</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">AuthorizationRequestHandler</span> <span class="token keyword">implements</span> <span class="token class-name">Client<span class="token punctuation">.</span>ResultHandler</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token annotation punctuation">@Override</span></span>
<span class="line">  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onResult</span><span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>Object</span> object<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">switch</span> <span class="token punctuation">(</span>object<span class="token punctuation">.</span><span class="token function">getConstructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>Error</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;接收错误:&quot;</span> <span class="token operator">+</span> newLine <span class="token operator">+</span> object<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token function">onAuthorizationStateUpdated</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 重复上一个操作</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>Ok</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token operator">:</span></span>
<span class="line">        <span class="token comment">// 结果已通过 UpdateAuthorizationState 接收，无需处理</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">default</span><span class="token operator">:</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;从 TDLib 接收错误响应:&quot;</span> <span class="token operator">+</span> newLine <span class="token operator">+</span> object<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong><code>AuthorizationRequestHandler</code> 类</strong>：处理授权请求的结果，主要处理错误情况。</li><li><strong>错误处理</strong>：如果接收到错误响应，输出错误信息并重复上一个授权操作。</li></ul><h3 id="_13-日志消息处理器" tabindex="-1"><a class="header-anchor" href="#_13-日志消息处理器"><span>13. 日志消息处理器</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">LogMessageHandler</span> <span class="token keyword">implements</span> <span class="token class-name">Client<span class="token punctuation">.</span>LogMessageHandler</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token annotation punctuation">@Override</span></span>
<span class="line">  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onLogMessage</span><span class="token punctuation">(</span><span class="token keyword">int</span> verbosityLevel<span class="token punctuation">,</span> <span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>verbosityLevel <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">onFatalError</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong><code>LogMessageHandler</code> 类</strong>：实现 <code>Client.LogMessageHandler</code> 接口，用于处理 TDLib 的日志消息。</li><li><strong>致命错误</strong>：如果日志级别为 0，表示致命错误，调用 <code>onFatalError</code> 方法处理。</li></ul><h3 id="_14-处理致命错误" tabindex="-1"><a class="header-anchor" href="#_14-处理致命错误"><span>14. 处理致命错误</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">onFatalError</span><span class="token punctuation">(</span><span class="token class-name">String</span> errorMessage<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">ThrowError</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> errorMessage<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">AtomicLong</span> errorThrowTime<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">ThrowError</span><span class="token punctuation">(</span><span class="token class-name">String</span> errorMessage<span class="token punctuation">,</span> <span class="token class-name">AtomicLong</span> errorThrowTime<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span>errorMessage <span class="token operator">=</span> errorMessage<span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span>errorThrowTime <span class="token operator">=</span> errorThrowTime<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDatabaseBrokenError</span><span class="token punctuation">(</span>errorMessage<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">isDiskFullError</span><span class="token punctuation">(</span>errorMessage<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">isDiskError</span><span class="token punctuation">(</span>errorMessage<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">processExternalError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">      errorThrowTime<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ClientError</span><span class="token punctuation">(</span><span class="token string">&quot;TDLib 致命错误: &quot;</span> <span class="token operator">+</span> errorMessage<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">processExternalError</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      errorThrowTime<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ExternalClientError</span><span class="token punctuation">(</span><span class="token string">&quot;致命错误: &quot;</span> <span class="token operator">+</span> errorMessage<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">ClientError</span> <span class="token keyword">extends</span> <span class="token class-name">Error</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">private</span> <span class="token class-name">ClientError</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">super</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">ExternalClientError</span> <span class="token keyword">extends</span> <span class="token class-name">Error</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">public</span> <span class="token class-name">ExternalClientError</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">super</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">isDatabaseBrokenError</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">return</span> message<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;Wrong key or database is corrupted&quot;</span><span class="token punctuation">)</span> <span class="token operator">||</span></span>
<span class="line">             message<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;SQL logic error or missing database&quot;</span><span class="token punctuation">)</span> <span class="token operator">||</span></span>
<span class="line">             message<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;database disk image is malformed&quot;</span><span class="token punctuation">)</span> <span class="token operator">||</span></span>
<span class="line">             message<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;file is encrypted or is not a database&quot;</span><span class="token punctuation">)</span> <span class="token operator">||</span></span>
<span class="line">             message<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;unsupported file format&quot;</span><span class="token punctuation">)</span> <span class="token operator">||</span></span>
<span class="line">             message<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;Database was corrupted and deleted during execution and can&#39;t be recreated&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">isDiskFullError</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">return</span> message<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;PosixError : No space left on device&quot;</span><span class="token punctuation">)</span> <span class="token operator">||</span></span>
<span class="line">             message<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;database or disk is full&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">isDiskError</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">return</span> message<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;I/O error&quot;</span><span class="token punctuation">)</span> <span class="token operator">||</span></span>
<span class="line">             message<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;Structure needs cleaning&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">final</span> <span class="token class-name">AtomicLong</span> errorThrowTime <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicLong</span><span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token constant">MAX_VALUE</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ThrowError</span><span class="token punctuation">(</span>errorMessage<span class="token punctuation">,</span> errorThrowTime<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;TDLib 致命错误线程&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 等待至少 10 秒后错误抛出</span></span>
<span class="line">  <span class="token keyword">while</span> <span class="token punctuation">(</span>errorThrowTime<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">10000</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span> <span class="token comment">/* 毫秒 */</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> ignore<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">interrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong><code>onFatalError</code> 方法</strong>：处理 TDLib 抛出的致命错误。</li><li><strong>错误分类</strong>：根据错误信息判断是数据库损坏、磁盘空间不足还是其他磁盘错误，并抛出相应的异常。</li><li><strong>线程处理</strong>：在新线程中抛出错误，主线程等待错误抛出后进行相应处理。</li></ul><h3 id="_15-有序聊天类" tabindex="-1"><a class="header-anchor" href="#_15-有序聊天类"><span>15. 有序聊天类</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">OrderedChat</span> <span class="token keyword">implements</span> <span class="token class-name">Comparable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OrderedChat</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">final</span> <span class="token keyword">long</span> chatId<span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">final</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>ChatPosition</span> position<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token class-name">OrderedChat</span><span class="token punctuation">(</span><span class="token keyword">long</span> chatId<span class="token punctuation">,</span> <span class="token class-name">TdApi<span class="token punctuation">.</span>ChatPosition</span> position<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>chatId <span class="token operator">=</span> chatId<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>position <span class="token operator">=</span> position<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token annotation punctuation">@Override</span></span>
<span class="line">  <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compareTo</span><span class="token punctuation">(</span><span class="token class-name">OrderedChat</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>position<span class="token punctuation">.</span>order <span class="token operator">!=</span> o<span class="token punctuation">.</span>position<span class="token punctuation">.</span>order<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">return</span> o<span class="token punctuation">.</span>position<span class="token punctuation">.</span>order <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>position<span class="token punctuation">.</span>order <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>chatId <span class="token operator">!=</span> o<span class="token punctuation">.</span>chatId<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">return</span> o<span class="token punctuation">.</span>chatId <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>chatId <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token annotation punctuation">@Override</span></span>
<span class="line">  <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Object</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>obj <span class="token keyword">instanceof</span> <span class="token class-name">OrderedChat</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">OrderedChat</span> o <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">OrderedChat</span><span class="token punctuation">)</span> obj<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>chatId <span class="token operator">==</span> o<span class="token punctuation">.</span>chatId <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>position<span class="token punctuation">.</span>order <span class="token operator">==</span> o<span class="token punctuation">.</span>position<span class="token punctuation">.</span>order<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token annotation punctuation">@Override</span></span>
<span class="line">  <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span>chatId<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">31</span> <span class="token operator">+</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span>position<span class="token punctuation">.</span>order<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong><code>OrderedChat</code> 类</strong>：用于在 <code>NavigableSet</code> 中按顺序存储聊天信息，确保聊天按照指定顺序排列。</li><li><strong><code>compareTo</code> 方法</strong>：定义了聊天的排序规则，首先按位置顺序排序，如果顺序相同，则按 <code>chatId</code> 排序。</li></ul><h3 id="_16-默认结果处理器" tabindex="-1"><a class="header-anchor" href="#_16-默认结果处理器"><span>16. 默认结果处理器</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">DefaultHandler</span> <span class="token keyword">implements</span> <span class="token class-name">Client<span class="token punctuation">.</span>ResultHandler</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token annotation punctuation">@Override</span></span>
<span class="line">  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onResult</span><span class="token punctuation">(</span><span class="token class-name">TdApi<span class="token punctuation">.</span>Object</span> object<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">print</span><span class="token punctuation">(</span>object<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong><code>DefaultHandler</code> 类</strong>：实现 <code>Client.ResultHandler</code> 接口，用于处理默认的结果响应，直接打印响应内容。</li></ul><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>该示例展示了如何使用 <strong>java-td-lib</strong> 库与 Telegram 进行基本的交互，包括授权流程、处理各种更新、发送消息等。通过合理使用并发数据结构和同步机制，确保了多线程环境下的数据一致性和安全性。同时，示例代码还包含了错误处理机制，能够应对潜在的致命错误，保证应用的稳定运行。</p><p>开发者可以基于该示例进一步扩展功能，实现更复杂的 Telegram 客户端应用。</p><h2 id="jsonexample" tabindex="-1"><a class="header-anchor" href="#jsonexample"><span>JsonExample</span></a></h2><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>drinkless<span class="token punctuation">.</span>tdlib<span class="token punctuation">.</span>example</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>drinkless<span class="token punctuation">.</span>tdlib<span class="token punctuation">.</span></span><span class="token class-name">JsonClient</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * Example class for TDLib usage from Java using JSON interface.</span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">JsonExample</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// set log message handler to handle only fatal errors (0) and plain log messages (-1)</span></span>
<span class="line">    <span class="token class-name">JsonClient</span><span class="token punctuation">.</span><span class="token function">setLogMessageHandler</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">LogMessageHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// disable TDLib log and redirect fatal errors and plain log messages to a file</span></span>
<span class="line">    <span class="token class-name">JsonClient</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token string">&quot;{\\&quot;@type\\&quot;:\\&quot;setLogVerbosityLevel\\&quot;,\\&quot;new_verbosity_level\\&quot;:0}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">JsonClient</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token string">&quot;{\\&quot;@type\\&quot;:\\&quot;setLogStream\\&quot;,\\&quot;log_stream\\&quot;:{\\&quot;@type\\&quot;:\\&quot;logStreamFile\\&quot;,\\&quot;path\\&quot;:\\&quot;tdlib.log\\&quot;,\\&quot;max_file_size\\&quot;:128000000}}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// create client identifier</span></span>
<span class="line">    <span class="token keyword">int</span> clientId <span class="token operator">=</span> <span class="token class-name">JsonClient</span><span class="token punctuation">.</span><span class="token function">createClientId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// send first request to activate the client</span></span>
<span class="line">    <span class="token class-name">JsonClient</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>clientId<span class="token punctuation">,</span> <span class="token string">&quot;{\\&quot;@type\\&quot;:\\&quot;getOption\\&quot;,\\&quot;name\\&quot;:\\&quot;version\\&quot;}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// main loop</span></span>
<span class="line">    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token class-name">String</span> result <span class="token operator">=</span> <span class="token class-name">JsonClient</span><span class="token punctuation">.</span><span class="token function">receive</span><span class="token punctuation">(</span><span class="token number">100.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">LogMessageHandler</span> <span class="token keyword">implements</span> <span class="token class-name">JsonClient<span class="token punctuation">.</span>LogMessageHandler</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onLogMessage</span><span class="token punctuation">(</span><span class="token keyword">int</span> verbosityLevel<span class="token punctuation">,</span> <span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>verbosityLevel <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Receive fatal error; the process will crash now&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,69)]))}const i=s(e,[["render",c],["__file","get-started.html.vue"]]),u=JSON.parse('{"path":"/get-started.html","title":"java-td-lib","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"添加依赖","slug":"添加依赖","link":"#添加依赖","children":[]},{"level":2,"title":"添加库文件","slug":"添加库文件","link":"#添加库文件","children":[]},{"level":2,"title":"编写代码","slug":"编写代码","link":"#编写代码","children":[]},{"level":2,"title":"代码解释","slug":"代码解释","link":"#代码解释","children":[{"level":3,"title":"1. 导入必要的包","slug":"_1-导入必要的包","link":"#_1-导入必要的包","children":[]},{"level":3,"title":"2. 定义类和变量","slug":"_2-定义类和变量","link":"#_2-定义类和变量","children":[]},{"level":3,"title":"3. 打印辅助方法","slug":"_3-打印辅助方法","link":"#_3-打印辅助方法","children":[]},{"level":3,"title":"4. 设置聊天位置","slug":"_4-设置聊天位置","link":"#_4-设置聊天位置","children":[]},{"level":3,"title":"5. 处理授权状态更新","slug":"_5-处理授权状态更新","link":"#_5-处理授权状态更新","children":[]},{"level":3,"title":"6. 辅助方法","slug":"_6-辅助方法","link":"#_6-辅助方法","children":[]},{"level":3,"title":"7. 处理用户命令","slug":"_7-处理用户命令","link":"#_7-处理用户命令","children":[]},{"level":3,"title":"8. 获取主聊天列表","slug":"_8-获取主聊天列表","link":"#_8-获取主聊天列表","children":[]},{"level":3,"title":"9. 发送消息","slug":"_9-发送消息","link":"#_9-发送消息","children":[]},{"level":3,"title":"10. 主方法","slug":"_10-主方法","link":"#_10-主方法","children":[]},{"level":3,"title":"11. 处理更新","slug":"_11-处理更新","link":"#_11-处理更新","children":[]},{"level":3,"title":"12. 授权请求处理器","slug":"_12-授权请求处理器","link":"#_12-授权请求处理器","children":[]},{"level":3,"title":"13. 日志消息处理器","slug":"_13-日志消息处理器","link":"#_13-日志消息处理器","children":[]},{"level":3,"title":"14. 处理致命错误","slug":"_14-处理致命错误","link":"#_14-处理致命错误","children":[]},{"level":3,"title":"15. 有序聊天类","slug":"_15-有序聊天类","link":"#_15-有序聊天类","children":[]},{"level":3,"title":"16. 默认结果处理器","slug":"_16-默认结果处理器","link":"#_16-默认结果处理器","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":2,"title":"JsonExample","slug":"jsonexample","link":"#jsonexample","children":[]}],"git":{"updatedTime":1735559717000,"contributors":[{"name":"litongjava","username":"litongjava","email":"litongjava@qq.com","commits":2,"url":"https://github.com/litongjava"}]},"filePathRelative":"get-started.md"}');export{i as comp,u as data};
